// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account.proto

#ifndef PROTOBUF_account_2eproto__INCLUDED
#define PROTOBUF_account_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PublicProto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_account_2eproto();
void protobuf_AssignDesc_account_2eproto();
void protobuf_ShutdownFile_account_2eproto();

class C_FastSignUp;
class C_SignUpWithAccount;
class S_SignUpRet;
class C_LoginByAccount;
class C_FastLogin;
class S_LoginRet;
class C_SelectPlatform;
class S_SelectPlatformRet;

// ===================================================================

class C_FastSignUp : public ::google::protobuf::Message {
 public:
  C_FastSignUp();
  virtual ~C_FastSignUp();

  C_FastSignUp(const C_FastSignUp& from);

  inline C_FastSignUp& operator=(const C_FastSignUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_FastSignUp& default_instance();

  void Swap(C_FastSignUp* other);

  // implements Message ----------------------------------------------

  inline C_FastSignUp* New() const { return New(NULL); }

  C_FastSignUp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_FastSignUp& from);
  void MergeFrom(const C_FastSignUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_FastSignUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string device = 1;
  inline bool has_device() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 1;
  inline const ::std::string& device() const;
  inline void set_device(const ::std::string& value);
  inline void set_device(const char* value);
  inline void set_device(const char* value, size_t size);
  inline ::std::string* mutable_device();
  inline ::std::string* release_device();
  inline void set_allocated_device(::std::string* device);

  // @@protoc_insertion_point(class_scope:PublicProto.C_FastSignUp)
 private:
  inline void set_has_device();
  inline void clear_has_device();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static C_FastSignUp* default_instance_;
};
// -------------------------------------------------------------------

class C_SignUpWithAccount : public ::google::protobuf::Message {
 public:
  C_SignUpWithAccount();
  virtual ~C_SignUpWithAccount();

  C_SignUpWithAccount(const C_SignUpWithAccount& from);

  inline C_SignUpWithAccount& operator=(const C_SignUpWithAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_SignUpWithAccount& default_instance();

  void Swap(C_SignUpWithAccount* other);

  // implements Message ----------------------------------------------

  inline C_SignUpWithAccount* New() const { return New(NULL); }

  C_SignUpWithAccount* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_SignUpWithAccount& from);
  void MergeFrom(const C_SignUpWithAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_SignUpWithAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:PublicProto.C_SignUpWithAccount)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static C_SignUpWithAccount* default_instance_;
};
// -------------------------------------------------------------------

class S_SignUpRet : public ::google::protobuf::Message {
 public:
  S_SignUpRet();
  virtual ~S_SignUpRet();

  S_SignUpRet(const S_SignUpRet& from);

  inline S_SignUpRet& operator=(const S_SignUpRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SignUpRet& default_instance();

  void Swap(S_SignUpRet* other);

  // implements Message ----------------------------------------------

  inline S_SignUpRet* New() const { return New(NULL); }

  S_SignUpRet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SignUpRet& from);
  void MergeFrom(const S_SignUpRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_SignUpRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 acc_id = 1;
  inline bool has_acc_id() const;
  inline void clear_acc_id();
  static const int kAccIdFieldNumber = 1;
  inline ::google::protobuf::uint32 acc_id() const;
  inline void set_acc_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_SignUpRet)
 private:
  inline void set_has_acc_id();
  inline void clear_has_acc_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 acc_id_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static S_SignUpRet* default_instance_;
};
// -------------------------------------------------------------------

class C_LoginByAccount : public ::google::protobuf::Message {
 public:
  C_LoginByAccount();
  virtual ~C_LoginByAccount();

  C_LoginByAccount(const C_LoginByAccount& from);

  inline C_LoginByAccount& operator=(const C_LoginByAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_LoginByAccount& default_instance();

  void Swap(C_LoginByAccount* other);

  // implements Message ----------------------------------------------

  inline C_LoginByAccount* New() const { return New(NULL); }

  C_LoginByAccount* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_LoginByAccount& from);
  void MergeFrom(const C_LoginByAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_LoginByAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:PublicProto.C_LoginByAccount)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static C_LoginByAccount* default_instance_;
};
// -------------------------------------------------------------------

class C_FastLogin : public ::google::protobuf::Message {
 public:
  C_FastLogin();
  virtual ~C_FastLogin();

  C_FastLogin(const C_FastLogin& from);

  inline C_FastLogin& operator=(const C_FastLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_FastLogin& default_instance();

  void Swap(C_FastLogin* other);

  // implements Message ----------------------------------------------

  inline C_FastLogin* New() const { return New(NULL); }

  C_FastLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_FastLogin& from);
  void MergeFrom(const C_FastLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_FastLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 acc_id = 1;
  inline bool has_acc_id() const;
  inline void clear_acc_id();
  static const int kAccIdFieldNumber = 1;
  inline ::google::protobuf::uint64 acc_id() const;
  inline void set_acc_id(::google::protobuf::uint64 value);

  // required string device = 2;
  inline bool has_device() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 2;
  inline const ::std::string& device() const;
  inline void set_device(const ::std::string& value);
  inline void set_device(const char* value);
  inline void set_device(const char* value, size_t size);
  inline ::std::string* mutable_device();
  inline ::std::string* release_device();
  inline void set_allocated_device(::std::string* device);

  // @@protoc_insertion_point(class_scope:PublicProto.C_FastLogin)
 private:
  inline void set_has_acc_id();
  inline void clear_has_acc_id();
  inline void set_has_device();
  inline void clear_has_device();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 acc_id_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static C_FastLogin* default_instance_;
};
// -------------------------------------------------------------------

class S_LoginRet : public ::google::protobuf::Message {
 public:
  S_LoginRet();
  virtual ~S_LoginRet();

  S_LoginRet(const S_LoginRet& from);

  inline S_LoginRet& operator=(const S_LoginRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_LoginRet& default_instance();

  void Swap(S_LoginRet* other);

  // implements Message ----------------------------------------------

  inline S_LoginRet* New() const { return New(NULL); }

  S_LoginRet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_LoginRet& from);
  void MergeFrom(const S_LoginRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_LoginRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 acc_id = 1;
  inline bool has_acc_id() const;
  inline void clear_acc_id();
  static const int kAccIdFieldNumber = 1;
  inline ::google::protobuf::uint64 acc_id() const;
  inline void set_acc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_LoginRet)
 private:
  inline void set_has_acc_id();
  inline void clear_has_acc_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 acc_id_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static S_LoginRet* default_instance_;
};
// -------------------------------------------------------------------

class C_SelectPlatform : public ::google::protobuf::Message {
 public:
  C_SelectPlatform();
  virtual ~C_SelectPlatform();

  C_SelectPlatform(const C_SelectPlatform& from);

  inline C_SelectPlatform& operator=(const C_SelectPlatform& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_SelectPlatform& default_instance();

  void Swap(C_SelectPlatform* other);

  // implements Message ----------------------------------------------

  inline C_SelectPlatform* New() const { return New(NULL); }

  C_SelectPlatform* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_SelectPlatform& from);
  void MergeFrom(const C_SelectPlatform& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_SelectPlatform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 platform = 1;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 1;
  inline ::google::protobuf::uint32 platform() const;
  inline void set_platform(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.C_SelectPlatform)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 platform_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static C_SelectPlatform* default_instance_;
};
// -------------------------------------------------------------------

class S_SelectPlatformRet : public ::google::protobuf::Message {
 public:
  S_SelectPlatformRet();
  virtual ~S_SelectPlatformRet();

  S_SelectPlatformRet(const S_SelectPlatformRet& from);

  inline S_SelectPlatformRet& operator=(const S_SelectPlatformRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SelectPlatformRet& default_instance();

  void Swap(S_SelectPlatformRet* other);

  // implements Message ----------------------------------------------

  inline S_SelectPlatformRet* New() const { return New(NULL); }

  S_SelectPlatformRet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SelectPlatformRet& from);
  void MergeFrom(const S_SelectPlatformRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_SelectPlatformRet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // required uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // required uint64 token = 3;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 3;
  inline ::google::protobuf::uint64 token() const;
  inline void set_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_SelectPlatformRet)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_token();
  inline void clear_has_token();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint64 token_;
  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static S_SelectPlatformRet* default_instance_;
};
// ===================================================================


// ===================================================================

// C_FastSignUp

// required string device = 1;
inline bool C_FastSignUp::has_device() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_FastSignUp::set_has_device() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_FastSignUp::clear_has_device() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_FastSignUp::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& C_FastSignUp::device() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_FastSignUp.device)
  return device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_FastSignUp::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_FastSignUp.device)
}
inline void C_FastSignUp::set_device(const char* value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_FastSignUp.device)
}
inline void C_FastSignUp::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_FastSignUp.device)
}
inline ::std::string* C_FastSignUp::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_FastSignUp.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_FastSignUp::release_device() {
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_FastSignUp::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_FastSignUp.device)
}

// -------------------------------------------------------------------

// C_SignUpWithAccount

// required string account = 1;
inline bool C_SignUpWithAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_SignUpWithAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_SignUpWithAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_SignUpWithAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& C_SignUpWithAccount::account() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_SignUpWithAccount.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_SignUpWithAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_SignUpWithAccount.account)
}
inline void C_SignUpWithAccount::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_SignUpWithAccount.account)
}
inline void C_SignUpWithAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_SignUpWithAccount.account)
}
inline ::std::string* C_SignUpWithAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_SignUpWithAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_SignUpWithAccount::release_account() {
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_SignUpWithAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_SignUpWithAccount.account)
}

// required string password = 2;
inline bool C_SignUpWithAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_SignUpWithAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_SignUpWithAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_SignUpWithAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& C_SignUpWithAccount::password() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_SignUpWithAccount.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_SignUpWithAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_SignUpWithAccount.password)
}
inline void C_SignUpWithAccount::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_SignUpWithAccount.password)
}
inline void C_SignUpWithAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_SignUpWithAccount.password)
}
inline ::std::string* C_SignUpWithAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_SignUpWithAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_SignUpWithAccount::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_SignUpWithAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_SignUpWithAccount.password)
}

// -------------------------------------------------------------------

// S_SignUpRet

// required uint32 acc_id = 1;
inline bool S_SignUpRet::has_acc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_SignUpRet::set_has_acc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_SignUpRet::clear_has_acc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_SignUpRet::clear_acc_id() {
  acc_id_ = 0u;
  clear_has_acc_id();
}
inline ::google::protobuf::uint32 S_SignUpRet::acc_id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SignUpRet.acc_id)
  return acc_id_;
}
inline void S_SignUpRet::set_acc_id(::google::protobuf::uint32 value) {
  set_has_acc_id();
  acc_id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SignUpRet.acc_id)
}

// -------------------------------------------------------------------

// C_LoginByAccount

// required string account = 2;
inline bool C_LoginByAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_LoginByAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_LoginByAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_LoginByAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& C_LoginByAccount::account() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_LoginByAccount.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginByAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_LoginByAccount.account)
}
inline void C_LoginByAccount::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_LoginByAccount.account)
}
inline void C_LoginByAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_LoginByAccount.account)
}
inline ::std::string* C_LoginByAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_LoginByAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_LoginByAccount::release_account() {
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginByAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_LoginByAccount.account)
}

// required string password = 3;
inline bool C_LoginByAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_LoginByAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_LoginByAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_LoginByAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& C_LoginByAccount::password() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_LoginByAccount.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginByAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_LoginByAccount.password)
}
inline void C_LoginByAccount::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_LoginByAccount.password)
}
inline void C_LoginByAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_LoginByAccount.password)
}
inline ::std::string* C_LoginByAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_LoginByAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_LoginByAccount::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_LoginByAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_LoginByAccount.password)
}

// -------------------------------------------------------------------

// C_FastLogin

// required uint64 acc_id = 1;
inline bool C_FastLogin::has_acc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_FastLogin::set_has_acc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_FastLogin::clear_has_acc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_FastLogin::clear_acc_id() {
  acc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_acc_id();
}
inline ::google::protobuf::uint64 C_FastLogin::acc_id() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_FastLogin.acc_id)
  return acc_id_;
}
inline void C_FastLogin::set_acc_id(::google::protobuf::uint64 value) {
  set_has_acc_id();
  acc_id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.C_FastLogin.acc_id)
}

// required string device = 2;
inline bool C_FastLogin::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_FastLogin::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_FastLogin::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_FastLogin::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& C_FastLogin::device() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_FastLogin.device)
  return device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_FastLogin::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_FastLogin.device)
}
inline void C_FastLogin::set_device(const char* value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_FastLogin.device)
}
inline void C_FastLogin::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_FastLogin.device)
}
inline ::std::string* C_FastLogin::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_FastLogin.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_FastLogin::release_device() {
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_FastLogin::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_FastLogin.device)
}

// -------------------------------------------------------------------

// S_LoginRet

// required uint64 acc_id = 1;
inline bool S_LoginRet::has_acc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_LoginRet::set_has_acc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_LoginRet::clear_has_acc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_LoginRet::clear_acc_id() {
  acc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_acc_id();
}
inline ::google::protobuf::uint64 S_LoginRet::acc_id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_LoginRet.acc_id)
  return acc_id_;
}
inline void S_LoginRet::set_acc_id(::google::protobuf::uint64 value) {
  set_has_acc_id();
  acc_id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_LoginRet.acc_id)
}

// -------------------------------------------------------------------

// C_SelectPlatform

// required uint32 platform = 1;
inline bool C_SelectPlatform::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_SelectPlatform::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_SelectPlatform::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_SelectPlatform::clear_platform() {
  platform_ = 0u;
  clear_has_platform();
}
inline ::google::protobuf::uint32 C_SelectPlatform::platform() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_SelectPlatform.platform)
  return platform_;
}
inline void C_SelectPlatform::set_platform(::google::protobuf::uint32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.C_SelectPlatform.platform)
}

// -------------------------------------------------------------------

// S_SelectPlatformRet

// required uint32 ip = 1;
inline bool S_SelectPlatformRet::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_SelectPlatformRet::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_SelectPlatformRet::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_SelectPlatformRet::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 S_SelectPlatformRet::ip() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SelectPlatformRet.ip)
  return ip_;
}
inline void S_SelectPlatformRet::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SelectPlatformRet.ip)
}

// required uint32 port = 2;
inline bool S_SelectPlatformRet::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_SelectPlatformRet::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_SelectPlatformRet::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_SelectPlatformRet::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 S_SelectPlatformRet::port() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SelectPlatformRet.port)
  return port_;
}
inline void S_SelectPlatformRet::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SelectPlatformRet.port)
}

// required uint64 token = 3;
inline bool S_SelectPlatformRet::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_SelectPlatformRet::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_SelectPlatformRet::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_SelectPlatformRet::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 S_SelectPlatformRet::token() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SelectPlatformRet.token)
  return token_;
}
inline void S_SelectPlatformRet::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SelectPlatformRet.token)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PublicProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_account_2eproto__INCLUDED
