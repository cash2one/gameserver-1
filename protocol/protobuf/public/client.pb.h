// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#ifndef PROTOBUF_client_2eproto__INCLUDED
#define PROTOBUF_client_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PublicProto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_client_2eproto();
void protobuf_AssignDesc_client_2eproto();
void protobuf_ShutdownFile_client_2eproto();

class AccountAndTokenToServer;
class S_ClientLoginReady;
class C_SetUpName;
class C_MoveTo;
class S_ItemRoleInfo;
class S_ItemFoodInfo;
class S_ItemThronInfo;
class S_ItemBulletInfo;
class S_ItemCollapsar;
class S_SyncSceneInfo;
class SceneItemAttr;
class HighSpeedSceneItemAttr;
class DeleteItem;
class S_SyncLogicCenter;
class S_GameOver;
class C_Fission;
class C_Expal;
class S_UserLogout;
class S_SceneItemAttrAfterImpactToCollapsar;
class S_UpdatePoint;

// ===================================================================

class AccountAndTokenToServer : public ::google::protobuf::Message {
 public:
  AccountAndTokenToServer();
  virtual ~AccountAndTokenToServer();

  AccountAndTokenToServer(const AccountAndTokenToServer& from);

  inline AccountAndTokenToServer& operator=(const AccountAndTokenToServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountAndTokenToServer& default_instance();

  void Swap(AccountAndTokenToServer* other);

  // implements Message ----------------------------------------------

  inline AccountAndTokenToServer* New() const { return New(NULL); }

  AccountAndTokenToServer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountAndTokenToServer& from);
  void MergeFrom(const AccountAndTokenToServer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AccountAndTokenToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 acc_id = 1;
  inline bool has_acc_id() const;
  inline void clear_acc_id();
  static const int kAccIdFieldNumber = 1;
  inline ::google::protobuf::uint64 acc_id() const;
  inline void set_acc_id(::google::protobuf::uint64 value);

  // required uint64 token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline ::google::protobuf::uint64 token() const;
  inline void set_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PublicProto.AccountAndTokenToServer)
 private:
  inline void set_has_acc_id();
  inline void clear_has_acc_id();
  inline void set_has_token();
  inline void clear_has_token();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 acc_id_;
  ::google::protobuf::uint64 token_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static AccountAndTokenToServer* default_instance_;
};
// -------------------------------------------------------------------

class S_ClientLoginReady : public ::google::protobuf::Message {
 public:
  S_ClientLoginReady();
  virtual ~S_ClientLoginReady();

  S_ClientLoginReady(const S_ClientLoginReady& from);

  inline S_ClientLoginReady& operator=(const S_ClientLoginReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ClientLoginReady& default_instance();

  void Swap(S_ClientLoginReady* other);

  // implements Message ----------------------------------------------

  inline S_ClientLoginReady* New() const { return New(NULL); }

  S_ClientLoginReady* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ClientLoginReady& from);
  void MergeFrom(const S_ClientLoginReady& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ClientLoginReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_ClientLoginReady)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_ClientLoginReady* default_instance_;
};
// -------------------------------------------------------------------

class C_SetUpName : public ::google::protobuf::Message {
 public:
  C_SetUpName();
  virtual ~C_SetUpName();

  C_SetUpName(const C_SetUpName& from);

  inline C_SetUpName& operator=(const C_SetUpName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_SetUpName& default_instance();

  void Swap(C_SetUpName* other);

  // implements Message ----------------------------------------------

  inline C_SetUpName* New() const { return New(NULL); }

  C_SetUpName* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_SetUpName& from);
  void MergeFrom(const C_SetUpName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_SetUpName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:PublicProto.C_SetUpName)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static C_SetUpName* default_instance_;
};
// -------------------------------------------------------------------

class C_MoveTo : public ::google::protobuf::Message {
 public:
  C_MoveTo();
  virtual ~C_MoveTo();

  C_MoveTo(const C_MoveTo& from);

  inline C_MoveTo& operator=(const C_MoveTo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_MoveTo& default_instance();

  void Swap(C_MoveTo* other);

  // implements Message ----------------------------------------------

  inline C_MoveTo* New() const { return New(NULL); }

  C_MoveTo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_MoveTo& from);
  void MergeFrom(const C_MoveTo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_MoveTo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.C_MoveTo)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static C_MoveTo* default_instance_;
};
// -------------------------------------------------------------------

class S_ItemRoleInfo : public ::google::protobuf::Message {
 public:
  S_ItemRoleInfo();
  virtual ~S_ItemRoleInfo();

  S_ItemRoleInfo(const S_ItemRoleInfo& from);

  inline S_ItemRoleInfo& operator=(const S_ItemRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ItemRoleInfo& default_instance();

  void Swap(S_ItemRoleInfo* other);

  // implements Message ----------------------------------------------

  inline S_ItemRoleInfo* New() const { return New(NULL); }

  S_ItemRoleInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ItemRoleInfo& from);
  void MergeFrom(const S_ItemRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ItemRoleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // required int32 radius = 4;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 4;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint64 uid = 6;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 6;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required int32 color = 7;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 7;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_ItemRoleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_color();
  inline void clear_has_color();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  ::google::protobuf::int32 radius_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::int32 color_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_ItemRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class S_ItemFoodInfo : public ::google::protobuf::Message {
 public:
  S_ItemFoodInfo();
  virtual ~S_ItemFoodInfo();

  S_ItemFoodInfo(const S_ItemFoodInfo& from);

  inline S_ItemFoodInfo& operator=(const S_ItemFoodInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ItemFoodInfo& default_instance();

  void Swap(S_ItemFoodInfo* other);

  // implements Message ----------------------------------------------

  inline S_ItemFoodInfo* New() const { return New(NULL); }

  S_ItemFoodInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ItemFoodInfo& from);
  void MergeFrom(const S_ItemFoodInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ItemFoodInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_ItemFoodInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_ItemFoodInfo* default_instance_;
};
// -------------------------------------------------------------------

class S_ItemThronInfo : public ::google::protobuf::Message {
 public:
  S_ItemThronInfo();
  virtual ~S_ItemThronInfo();

  S_ItemThronInfo(const S_ItemThronInfo& from);

  inline S_ItemThronInfo& operator=(const S_ItemThronInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ItemThronInfo& default_instance();

  void Swap(S_ItemThronInfo* other);

  // implements Message ----------------------------------------------

  inline S_ItemThronInfo* New() const { return New(NULL); }

  S_ItemThronInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ItemThronInfo& from);
  void MergeFrom(const S_ItemThronInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ItemThronInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // required int32 radius = 4;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 4;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_ItemThronInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_radius();
  inline void clear_has_radius();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  ::google::protobuf::int32 radius_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_ItemThronInfo* default_instance_;
};
// -------------------------------------------------------------------

class S_ItemBulletInfo : public ::google::protobuf::Message {
 public:
  S_ItemBulletInfo();
  virtual ~S_ItemBulletInfo();

  S_ItemBulletInfo(const S_ItemBulletInfo& from);

  inline S_ItemBulletInfo& operator=(const S_ItemBulletInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ItemBulletInfo& default_instance();

  void Swap(S_ItemBulletInfo* other);

  // implements Message ----------------------------------------------

  inline S_ItemBulletInfo* New() const { return New(NULL); }

  S_ItemBulletInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ItemBulletInfo& from);
  void MergeFrom(const S_ItemBulletInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ItemBulletInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_ItemBulletInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_ItemBulletInfo* default_instance_;
};
// -------------------------------------------------------------------

class S_ItemCollapsar : public ::google::protobuf::Message {
 public:
  S_ItemCollapsar();
  virtual ~S_ItemCollapsar();

  S_ItemCollapsar(const S_ItemCollapsar& from);

  inline S_ItemCollapsar& operator=(const S_ItemCollapsar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ItemCollapsar& default_instance();

  void Swap(S_ItemCollapsar* other);

  // implements Message ----------------------------------------------

  inline S_ItemCollapsar* New() const { return New(NULL); }

  S_ItemCollapsar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_ItemCollapsar& from);
  void MergeFrom(const S_ItemCollapsar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_ItemCollapsar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);

  // required int32 radius = 5;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 5;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_ItemCollapsar)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_radius();
  inline void clear_has_radius();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  ::google::protobuf::int32 radius_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_ItemCollapsar* default_instance_;
};
// -------------------------------------------------------------------

class S_SyncSceneInfo : public ::google::protobuf::Message {
 public:
  S_SyncSceneInfo();
  virtual ~S_SyncSceneInfo();

  S_SyncSceneInfo(const S_SyncSceneInfo& from);

  inline S_SyncSceneInfo& operator=(const S_SyncSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SyncSceneInfo& default_instance();

  void Swap(S_SyncSceneInfo* other);

  // implements Message ----------------------------------------------

  inline S_SyncSceneInfo* New() const { return New(NULL); }

  S_SyncSceneInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SyncSceneInfo& from);
  void MergeFrom(const S_SyncSceneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_SyncSceneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PublicProto.S_ItemRoleInfo roles = 1;
  inline int roles_size() const;
  inline void clear_roles();
  static const int kRolesFieldNumber = 1;
  inline const ::PublicProto::S_ItemRoleInfo& roles(int index) const;
  inline ::PublicProto::S_ItemRoleInfo* mutable_roles(int index);
  inline ::PublicProto::S_ItemRoleInfo* add_roles();
  inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemRoleInfo >&
      roles() const;
  inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemRoleInfo >*
      mutable_roles();

  // repeated .PublicProto.S_ItemFoodInfo foods = 2;
  inline int foods_size() const;
  inline void clear_foods();
  static const int kFoodsFieldNumber = 2;
  inline const ::PublicProto::S_ItemFoodInfo& foods(int index) const;
  inline ::PublicProto::S_ItemFoodInfo* mutable_foods(int index);
  inline ::PublicProto::S_ItemFoodInfo* add_foods();
  inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemFoodInfo >&
      foods() const;
  inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemFoodInfo >*
      mutable_foods();

  // repeated .PublicProto.S_ItemThronInfo throns = 3;
  inline int throns_size() const;
  inline void clear_throns();
  static const int kThronsFieldNumber = 3;
  inline const ::PublicProto::S_ItemThronInfo& throns(int index) const;
  inline ::PublicProto::S_ItemThronInfo* mutable_throns(int index);
  inline ::PublicProto::S_ItemThronInfo* add_throns();
  inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemThronInfo >&
      throns() const;
  inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemThronInfo >*
      mutable_throns();

  // repeated .PublicProto.S_ItemBulletInfo bullets = 4;
  inline int bullets_size() const;
  inline void clear_bullets();
  static const int kBulletsFieldNumber = 4;
  inline const ::PublicProto::S_ItemBulletInfo& bullets(int index) const;
  inline ::PublicProto::S_ItemBulletInfo* mutable_bullets(int index);
  inline ::PublicProto::S_ItemBulletInfo* add_bullets();
  inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemBulletInfo >&
      bullets() const;
  inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemBulletInfo >*
      mutable_bullets();

  // repeated .PublicProto.S_ItemCollapsar collapsar = 5;
  inline int collapsar_size() const;
  inline void clear_collapsar();
  static const int kCollapsarFieldNumber = 5;
  inline const ::PublicProto::S_ItemCollapsar& collapsar(int index) const;
  inline ::PublicProto::S_ItemCollapsar* mutable_collapsar(int index);
  inline ::PublicProto::S_ItemCollapsar* add_collapsar();
  inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemCollapsar >&
      collapsar() const;
  inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemCollapsar >*
      mutable_collapsar();

  // @@protoc_insertion_point(class_scope:PublicProto.S_SyncSceneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemRoleInfo > roles_;
  ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemFoodInfo > foods_;
  ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemThronInfo > throns_;
  ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemBulletInfo > bullets_;
  ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemCollapsar > collapsar_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_SyncSceneInfo* default_instance_;
};
// -------------------------------------------------------------------

class SceneItemAttr : public ::google::protobuf::Message {
 public:
  SceneItemAttr();
  virtual ~SceneItemAttr();

  SceneItemAttr(const SceneItemAttr& from);

  inline SceneItemAttr& operator=(const SceneItemAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneItemAttr& default_instance();

  void Swap(SceneItemAttr* other);

  // implements Message ----------------------------------------------

  inline SceneItemAttr* New() const { return New(NULL); }

  SceneItemAttr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneItemAttr& from);
  void MergeFrom(const SceneItemAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SceneItemAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int32 radius = 2;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 2;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // optional float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.SceneItemAttr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 radius_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static SceneItemAttr* default_instance_;
};
// -------------------------------------------------------------------

class HighSpeedSceneItemAttr : public ::google::protobuf::Message {
 public:
  HighSpeedSceneItemAttr();
  virtual ~HighSpeedSceneItemAttr();

  HighSpeedSceneItemAttr(const HighSpeedSceneItemAttr& from);

  inline HighSpeedSceneItemAttr& operator=(const HighSpeedSceneItemAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HighSpeedSceneItemAttr& default_instance();

  void Swap(HighSpeedSceneItemAttr* other);

  // implements Message ----------------------------------------------

  inline HighSpeedSceneItemAttr* New() const { return New(NULL); }

  HighSpeedSceneItemAttr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HighSpeedSceneItemAttr& from);
  void MergeFrom(const HighSpeedSceneItemAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HighSpeedSceneItemAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int32 radius = 2;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 2;
  inline ::google::protobuf::int32 radius() const;
  inline void set_radius(::google::protobuf::int32 value);

  // optional float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);

  // optional float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.HighSpeedSceneItemAttr)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_radius();
  inline void clear_has_radius();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 radius_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static HighSpeedSceneItemAttr* default_instance_;
};
// -------------------------------------------------------------------

class DeleteItem : public ::google::protobuf::Message {
 public:
  DeleteItem();
  virtual ~DeleteItem();

  DeleteItem(const DeleteItem& from);

  inline DeleteItem& operator=(const DeleteItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteItem& default_instance();

  void Swap(DeleteItem* other);

  // implements Message ----------------------------------------------

  inline DeleteItem* New() const { return New(NULL); }

  DeleteItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteItem& from);
  void MergeFrom(const DeleteItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 predator_id = 2;
  inline bool has_predator_id() const;
  inline void clear_predator_id();
  static const int kPredatorIdFieldNumber = 2;
  inline ::google::protobuf::uint32 predator_id() const;
  inline void set_predator_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.DeleteItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_predator_id();
  inline void clear_has_predator_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 predator_id_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static DeleteItem* default_instance_;
};
// -------------------------------------------------------------------

class S_SyncLogicCenter : public ::google::protobuf::Message {
 public:
  S_SyncLogicCenter();
  virtual ~S_SyncLogicCenter();

  S_SyncLogicCenter(const S_SyncLogicCenter& from);

  inline S_SyncLogicCenter& operator=(const S_SyncLogicCenter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SyncLogicCenter& default_instance();

  void Swap(S_SyncLogicCenter* other);

  // implements Message ----------------------------------------------

  inline S_SyncLogicCenter* New() const { return New(NULL); }

  S_SyncLogicCenter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SyncLogicCenter& from);
  void MergeFrom(const S_SyncLogicCenter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_SyncLogicCenter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_SyncLogicCenter)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_SyncLogicCenter* default_instance_;
};
// -------------------------------------------------------------------

class S_GameOver : public ::google::protobuf::Message {
 public:
  S_GameOver();
  virtual ~S_GameOver();

  S_GameOver(const S_GameOver& from);

  inline S_GameOver& operator=(const S_GameOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_GameOver& default_instance();

  void Swap(S_GameOver* other);

  // implements Message ----------------------------------------------

  inline S_GameOver* New() const { return New(NULL); }

  S_GameOver* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_GameOver& from);
  void MergeFrom(const S_GameOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_GameOver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PublicProto.S_GameOver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_GameOver* default_instance_;
};
// -------------------------------------------------------------------

class C_Fission : public ::google::protobuf::Message {
 public:
  C_Fission();
  virtual ~C_Fission();

  C_Fission(const C_Fission& from);

  inline C_Fission& operator=(const C_Fission& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Fission& default_instance();

  void Swap(C_Fission* other);

  // implements Message ----------------------------------------------

  inline C_Fission* New() const { return New(NULL); }

  C_Fission* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_Fission& from);
  void MergeFrom(const C_Fission& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_Fission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float radian = 1;
  inline bool has_radian() const;
  inline void clear_radian();
  static const int kRadianFieldNumber = 1;
  inline float radian() const;
  inline void set_radian(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.C_Fission)
 private:
  inline void set_has_radian();
  inline void clear_has_radian();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float radian_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static C_Fission* default_instance_;
};
// -------------------------------------------------------------------

class C_Expal : public ::google::protobuf::Message {
 public:
  C_Expal();
  virtual ~C_Expal();

  C_Expal(const C_Expal& from);

  inline C_Expal& operator=(const C_Expal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Expal& default_instance();

  void Swap(C_Expal* other);

  // implements Message ----------------------------------------------

  inline C_Expal* New() const { return New(NULL); }

  C_Expal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_Expal& from);
  void MergeFrom(const C_Expal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(C_Expal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float radian = 1;
  inline bool has_radian() const;
  inline void clear_radian();
  static const int kRadianFieldNumber = 1;
  inline float radian() const;
  inline void set_radian(float value);

  // @@protoc_insertion_point(class_scope:PublicProto.C_Expal)
 private:
  inline void set_has_radian();
  inline void clear_has_radian();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float radian_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static C_Expal* default_instance_;
};
// -------------------------------------------------------------------

class S_UserLogout : public ::google::protobuf::Message {
 public:
  S_UserLogout();
  virtual ~S_UserLogout();

  S_UserLogout(const S_UserLogout& from);

  inline S_UserLogout& operator=(const S_UserLogout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_UserLogout& default_instance();

  void Swap(S_UserLogout* other);

  // implements Message ----------------------------------------------

  inline S_UserLogout* New() const { return New(NULL); }

  S_UserLogout* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_UserLogout& from);
  void MergeFrom(const S_UserLogout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_UserLogout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_UserLogout)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_UserLogout* default_instance_;
};
// -------------------------------------------------------------------

class S_SceneItemAttrAfterImpactToCollapsar : public ::google::protobuf::Message {
 public:
  S_SceneItemAttrAfterImpactToCollapsar();
  virtual ~S_SceneItemAttrAfterImpactToCollapsar();

  S_SceneItemAttrAfterImpactToCollapsar(const S_SceneItemAttrAfterImpactToCollapsar& from);

  inline S_SceneItemAttrAfterImpactToCollapsar& operator=(const S_SceneItemAttrAfterImpactToCollapsar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SceneItemAttrAfterImpactToCollapsar& default_instance();

  void Swap(S_SceneItemAttrAfterImpactToCollapsar* other);

  // implements Message ----------------------------------------------

  inline S_SceneItemAttrAfterImpactToCollapsar* New() const { return New(NULL); }

  S_SceneItemAttrAfterImpactToCollapsar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SceneItemAttrAfterImpactToCollapsar& from);
  void MergeFrom(const S_SceneItemAttrAfterImpactToCollapsar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_SceneItemAttrAfterImpactToCollapsar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PublicProto.SceneItemAttr new_pos = 1;
  inline int new_pos_size() const;
  inline void clear_new_pos();
  static const int kNewPosFieldNumber = 1;
  inline const ::PublicProto::SceneItemAttr& new_pos(int index) const;
  inline ::PublicProto::SceneItemAttr* mutable_new_pos(int index);
  inline ::PublicProto::SceneItemAttr* add_new_pos();
  inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::SceneItemAttr >&
      new_pos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PublicProto::SceneItemAttr >*
      mutable_new_pos();

  // required uint32 collapsar_id = 2;
  inline bool has_collapsar_id() const;
  inline void clear_collapsar_id();
  static const int kCollapsarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 collapsar_id() const;
  inline void set_collapsar_id(::google::protobuf::uint32 value);

  // required uint64 uid = 3;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required bool erase_collapsar = 4;
  inline bool has_erase_collapsar() const;
  inline void clear_erase_collapsar();
  static const int kEraseCollapsarFieldNumber = 4;
  inline bool erase_collapsar() const;
  inline void set_erase_collapsar(bool value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_SceneItemAttrAfterImpactToCollapsar)
 private:
  inline void set_has_collapsar_id();
  inline void clear_has_collapsar_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_erase_collapsar();
  inline void clear_has_erase_collapsar();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PublicProto::SceneItemAttr > new_pos_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 collapsar_id_;
  bool erase_collapsar_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_SceneItemAttrAfterImpactToCollapsar* default_instance_;
};
// -------------------------------------------------------------------

class S_UpdatePoint : public ::google::protobuf::Message {
 public:
  S_UpdatePoint();
  virtual ~S_UpdatePoint();

  S_UpdatePoint(const S_UpdatePoint& from);

  inline S_UpdatePoint& operator=(const S_UpdatePoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_UpdatePoint& default_instance();

  void Swap(S_UpdatePoint* other);

  // implements Message ----------------------------------------------

  inline S_UpdatePoint* New() const { return New(NULL); }

  S_UpdatePoint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_UpdatePoint& from);
  void MergeFrom(const S_UpdatePoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(S_UpdatePoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 point = 1;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 1;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PublicProto.S_UpdatePoint)
 private:
  inline void set_has_point();
  inline void clear_has_point();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_client_2eproto();
  friend void protobuf_AssignDesc_client_2eproto();
  friend void protobuf_ShutdownFile_client_2eproto();

  void InitAsDefaultInstance();
  static S_UpdatePoint* default_instance_;
};
// ===================================================================


// ===================================================================

// AccountAndTokenToServer

// required uint64 acc_id = 1;
inline bool AccountAndTokenToServer::has_acc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountAndTokenToServer::set_has_acc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountAndTokenToServer::clear_has_acc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountAndTokenToServer::clear_acc_id() {
  acc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_acc_id();
}
inline ::google::protobuf::uint64 AccountAndTokenToServer::acc_id() const {
  // @@protoc_insertion_point(field_get:PublicProto.AccountAndTokenToServer.acc_id)
  return acc_id_;
}
inline void AccountAndTokenToServer::set_acc_id(::google::protobuf::uint64 value) {
  set_has_acc_id();
  acc_id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.AccountAndTokenToServer.acc_id)
}

// required uint64 token = 2;
inline bool AccountAndTokenToServer::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountAndTokenToServer::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountAndTokenToServer::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountAndTokenToServer::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 AccountAndTokenToServer::token() const {
  // @@protoc_insertion_point(field_get:PublicProto.AccountAndTokenToServer.token)
  return token_;
}
inline void AccountAndTokenToServer::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.AccountAndTokenToServer.token)
}

// -------------------------------------------------------------------

// S_ClientLoginReady

// required uint64 uid = 1;
inline bool S_ClientLoginReady::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ClientLoginReady::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ClientLoginReady::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ClientLoginReady::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 S_ClientLoginReady::uid() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ClientLoginReady.uid)
  return uid_;
}
inline void S_ClientLoginReady::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ClientLoginReady.uid)
}

// -------------------------------------------------------------------

// C_SetUpName

// required string name = 1;
inline bool C_SetUpName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_SetUpName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_SetUpName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_SetUpName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& C_SetUpName::name() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_SetUpName.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_SetUpName::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.C_SetUpName.name)
}
inline void C_SetUpName::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.C_SetUpName.name)
}
inline void C_SetUpName::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.C_SetUpName.name)
}
inline ::std::string* C_SetUpName::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PublicProto.C_SetUpName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_SetUpName::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_SetUpName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.C_SetUpName.name)
}

// -------------------------------------------------------------------

// C_MoveTo

// required float x = 1;
inline bool C_MoveTo::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_MoveTo::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_MoveTo::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_MoveTo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float C_MoveTo::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_MoveTo.x)
  return x_;
}
inline void C_MoveTo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.C_MoveTo.x)
}

// required float y = 2;
inline bool C_MoveTo::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_MoveTo::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_MoveTo::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_MoveTo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float C_MoveTo::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_MoveTo.y)
  return y_;
}
inline void C_MoveTo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.C_MoveTo.y)
}

// -------------------------------------------------------------------

// S_ItemRoleInfo

// required uint32 id = 1;
inline bool S_ItemRoleInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ItemRoleInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ItemRoleInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ItemRoleInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S_ItemRoleInfo::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.id)
  return id_;
}
inline void S_ItemRoleInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.id)
}

// required float x = 2;
inline bool S_ItemRoleInfo::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ItemRoleInfo::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ItemRoleInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ItemRoleInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_ItemRoleInfo::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.x)
  return x_;
}
inline void S_ItemRoleInfo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.x)
}

// required float y = 3;
inline bool S_ItemRoleInfo::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ItemRoleInfo::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ItemRoleInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ItemRoleInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_ItemRoleInfo::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.y)
  return y_;
}
inline void S_ItemRoleInfo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.y)
}

// required int32 radius = 4;
inline bool S_ItemRoleInfo::has_radius() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ItemRoleInfo::set_has_radius() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ItemRoleInfo::clear_has_radius() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ItemRoleInfo::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 S_ItemRoleInfo::radius() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.radius)
  return radius_;
}
inline void S_ItemRoleInfo::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.radius)
}

// optional string name = 5;
inline bool S_ItemRoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S_ItemRoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S_ItemRoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S_ItemRoleInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& S_ItemRoleInfo::name() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ItemRoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.name)
}
inline void S_ItemRoleInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PublicProto.S_ItemRoleInfo.name)
}
inline void S_ItemRoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PublicProto.S_ItemRoleInfo.name)
}
inline ::std::string* S_ItemRoleInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PublicProto.S_ItemRoleInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_ItemRoleInfo::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ItemRoleInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PublicProto.S_ItemRoleInfo.name)
}

// required uint64 uid = 6;
inline bool S_ItemRoleInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S_ItemRoleInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S_ItemRoleInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S_ItemRoleInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 S_ItemRoleInfo::uid() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.uid)
  return uid_;
}
inline void S_ItemRoleInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.uid)
}

// required int32 color = 7;
inline bool S_ItemRoleInfo::has_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S_ItemRoleInfo::set_has_color() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S_ItemRoleInfo::clear_has_color() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S_ItemRoleInfo::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 S_ItemRoleInfo::color() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemRoleInfo.color)
  return color_;
}
inline void S_ItemRoleInfo::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemRoleInfo.color)
}

// -------------------------------------------------------------------

// S_ItemFoodInfo

// required uint32 id = 1;
inline bool S_ItemFoodInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ItemFoodInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ItemFoodInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ItemFoodInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S_ItemFoodInfo::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemFoodInfo.id)
  return id_;
}
inline void S_ItemFoodInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemFoodInfo.id)
}

// required float x = 2;
inline bool S_ItemFoodInfo::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ItemFoodInfo::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ItemFoodInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ItemFoodInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_ItemFoodInfo::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemFoodInfo.x)
  return x_;
}
inline void S_ItemFoodInfo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemFoodInfo.x)
}

// required float y = 3;
inline bool S_ItemFoodInfo::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ItemFoodInfo::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ItemFoodInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ItemFoodInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_ItemFoodInfo::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemFoodInfo.y)
  return y_;
}
inline void S_ItemFoodInfo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemFoodInfo.y)
}

// -------------------------------------------------------------------

// S_ItemThronInfo

// required uint32 id = 1;
inline bool S_ItemThronInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ItemThronInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ItemThronInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ItemThronInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S_ItemThronInfo::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemThronInfo.id)
  return id_;
}
inline void S_ItemThronInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemThronInfo.id)
}

// required float x = 2;
inline bool S_ItemThronInfo::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ItemThronInfo::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ItemThronInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ItemThronInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_ItemThronInfo::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemThronInfo.x)
  return x_;
}
inline void S_ItemThronInfo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemThronInfo.x)
}

// required float y = 3;
inline bool S_ItemThronInfo::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ItemThronInfo::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ItemThronInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ItemThronInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_ItemThronInfo::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemThronInfo.y)
  return y_;
}
inline void S_ItemThronInfo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemThronInfo.y)
}

// required int32 radius = 4;
inline bool S_ItemThronInfo::has_radius() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ItemThronInfo::set_has_radius() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ItemThronInfo::clear_has_radius() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ItemThronInfo::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 S_ItemThronInfo::radius() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemThronInfo.radius)
  return radius_;
}
inline void S_ItemThronInfo::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemThronInfo.radius)
}

// -------------------------------------------------------------------

// S_ItemBulletInfo

// required uint32 id = 1;
inline bool S_ItemBulletInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ItemBulletInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ItemBulletInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ItemBulletInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S_ItemBulletInfo::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemBulletInfo.id)
  return id_;
}
inline void S_ItemBulletInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemBulletInfo.id)
}

// required float x = 2;
inline bool S_ItemBulletInfo::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ItemBulletInfo::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ItemBulletInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ItemBulletInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_ItemBulletInfo::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemBulletInfo.x)
  return x_;
}
inline void S_ItemBulletInfo::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemBulletInfo.x)
}

// required float y = 3;
inline bool S_ItemBulletInfo::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ItemBulletInfo::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ItemBulletInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ItemBulletInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_ItemBulletInfo::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemBulletInfo.y)
  return y_;
}
inline void S_ItemBulletInfo::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemBulletInfo.y)
}

// -------------------------------------------------------------------

// S_ItemCollapsar

// required uint32 id = 1;
inline bool S_ItemCollapsar::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ItemCollapsar::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ItemCollapsar::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ItemCollapsar::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S_ItemCollapsar::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemCollapsar.id)
  return id_;
}
inline void S_ItemCollapsar::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemCollapsar.id)
}

// required float x = 2;
inline bool S_ItemCollapsar::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ItemCollapsar::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ItemCollapsar::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ItemCollapsar::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_ItemCollapsar::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemCollapsar.x)
  return x_;
}
inline void S_ItemCollapsar::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemCollapsar.x)
}

// required float y = 3;
inline bool S_ItemCollapsar::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ItemCollapsar::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ItemCollapsar::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ItemCollapsar::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_ItemCollapsar::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemCollapsar.y)
  return y_;
}
inline void S_ItemCollapsar::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemCollapsar.y)
}

// required int32 radius = 5;
inline bool S_ItemCollapsar::has_radius() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ItemCollapsar::set_has_radius() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ItemCollapsar::clear_has_radius() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ItemCollapsar::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 S_ItemCollapsar::radius() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_ItemCollapsar.radius)
  return radius_;
}
inline void S_ItemCollapsar::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_ItemCollapsar.radius)
}

// -------------------------------------------------------------------

// S_SyncSceneInfo

// repeated .PublicProto.S_ItemRoleInfo roles = 1;
inline int S_SyncSceneInfo::roles_size() const {
  return roles_.size();
}
inline void S_SyncSceneInfo::clear_roles() {
  roles_.Clear();
}
inline const ::PublicProto::S_ItemRoleInfo& S_SyncSceneInfo::roles(int index) const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncSceneInfo.roles)
  return roles_.Get(index);
}
inline ::PublicProto::S_ItemRoleInfo* S_SyncSceneInfo::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:PublicProto.S_SyncSceneInfo.roles)
  return roles_.Mutable(index);
}
inline ::PublicProto::S_ItemRoleInfo* S_SyncSceneInfo::add_roles() {
  // @@protoc_insertion_point(field_add:PublicProto.S_SyncSceneInfo.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemRoleInfo >&
S_SyncSceneInfo::roles() const {
  // @@protoc_insertion_point(field_list:PublicProto.S_SyncSceneInfo.roles)
  return roles_;
}
inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemRoleInfo >*
S_SyncSceneInfo::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:PublicProto.S_SyncSceneInfo.roles)
  return &roles_;
}

// repeated .PublicProto.S_ItemFoodInfo foods = 2;
inline int S_SyncSceneInfo::foods_size() const {
  return foods_.size();
}
inline void S_SyncSceneInfo::clear_foods() {
  foods_.Clear();
}
inline const ::PublicProto::S_ItemFoodInfo& S_SyncSceneInfo::foods(int index) const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncSceneInfo.foods)
  return foods_.Get(index);
}
inline ::PublicProto::S_ItemFoodInfo* S_SyncSceneInfo::mutable_foods(int index) {
  // @@protoc_insertion_point(field_mutable:PublicProto.S_SyncSceneInfo.foods)
  return foods_.Mutable(index);
}
inline ::PublicProto::S_ItemFoodInfo* S_SyncSceneInfo::add_foods() {
  // @@protoc_insertion_point(field_add:PublicProto.S_SyncSceneInfo.foods)
  return foods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemFoodInfo >&
S_SyncSceneInfo::foods() const {
  // @@protoc_insertion_point(field_list:PublicProto.S_SyncSceneInfo.foods)
  return foods_;
}
inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemFoodInfo >*
S_SyncSceneInfo::mutable_foods() {
  // @@protoc_insertion_point(field_mutable_list:PublicProto.S_SyncSceneInfo.foods)
  return &foods_;
}

// repeated .PublicProto.S_ItemThronInfo throns = 3;
inline int S_SyncSceneInfo::throns_size() const {
  return throns_.size();
}
inline void S_SyncSceneInfo::clear_throns() {
  throns_.Clear();
}
inline const ::PublicProto::S_ItemThronInfo& S_SyncSceneInfo::throns(int index) const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncSceneInfo.throns)
  return throns_.Get(index);
}
inline ::PublicProto::S_ItemThronInfo* S_SyncSceneInfo::mutable_throns(int index) {
  // @@protoc_insertion_point(field_mutable:PublicProto.S_SyncSceneInfo.throns)
  return throns_.Mutable(index);
}
inline ::PublicProto::S_ItemThronInfo* S_SyncSceneInfo::add_throns() {
  // @@protoc_insertion_point(field_add:PublicProto.S_SyncSceneInfo.throns)
  return throns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemThronInfo >&
S_SyncSceneInfo::throns() const {
  // @@protoc_insertion_point(field_list:PublicProto.S_SyncSceneInfo.throns)
  return throns_;
}
inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemThronInfo >*
S_SyncSceneInfo::mutable_throns() {
  // @@protoc_insertion_point(field_mutable_list:PublicProto.S_SyncSceneInfo.throns)
  return &throns_;
}

// repeated .PublicProto.S_ItemBulletInfo bullets = 4;
inline int S_SyncSceneInfo::bullets_size() const {
  return bullets_.size();
}
inline void S_SyncSceneInfo::clear_bullets() {
  bullets_.Clear();
}
inline const ::PublicProto::S_ItemBulletInfo& S_SyncSceneInfo::bullets(int index) const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncSceneInfo.bullets)
  return bullets_.Get(index);
}
inline ::PublicProto::S_ItemBulletInfo* S_SyncSceneInfo::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:PublicProto.S_SyncSceneInfo.bullets)
  return bullets_.Mutable(index);
}
inline ::PublicProto::S_ItemBulletInfo* S_SyncSceneInfo::add_bullets() {
  // @@protoc_insertion_point(field_add:PublicProto.S_SyncSceneInfo.bullets)
  return bullets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemBulletInfo >&
S_SyncSceneInfo::bullets() const {
  // @@protoc_insertion_point(field_list:PublicProto.S_SyncSceneInfo.bullets)
  return bullets_;
}
inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemBulletInfo >*
S_SyncSceneInfo::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:PublicProto.S_SyncSceneInfo.bullets)
  return &bullets_;
}

// repeated .PublicProto.S_ItemCollapsar collapsar = 5;
inline int S_SyncSceneInfo::collapsar_size() const {
  return collapsar_.size();
}
inline void S_SyncSceneInfo::clear_collapsar() {
  collapsar_.Clear();
}
inline const ::PublicProto::S_ItemCollapsar& S_SyncSceneInfo::collapsar(int index) const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncSceneInfo.collapsar)
  return collapsar_.Get(index);
}
inline ::PublicProto::S_ItemCollapsar* S_SyncSceneInfo::mutable_collapsar(int index) {
  // @@protoc_insertion_point(field_mutable:PublicProto.S_SyncSceneInfo.collapsar)
  return collapsar_.Mutable(index);
}
inline ::PublicProto::S_ItemCollapsar* S_SyncSceneInfo::add_collapsar() {
  // @@protoc_insertion_point(field_add:PublicProto.S_SyncSceneInfo.collapsar)
  return collapsar_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemCollapsar >&
S_SyncSceneInfo::collapsar() const {
  // @@protoc_insertion_point(field_list:PublicProto.S_SyncSceneInfo.collapsar)
  return collapsar_;
}
inline ::google::protobuf::RepeatedPtrField< ::PublicProto::S_ItemCollapsar >*
S_SyncSceneInfo::mutable_collapsar() {
  // @@protoc_insertion_point(field_mutable_list:PublicProto.S_SyncSceneInfo.collapsar)
  return &collapsar_;
}

// -------------------------------------------------------------------

// SceneItemAttr

// required uint32 id = 1;
inline bool SceneItemAttr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneItemAttr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneItemAttr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneItemAttr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SceneItemAttr::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.SceneItemAttr.id)
  return id_;
}
inline void SceneItemAttr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.SceneItemAttr.id)
}

// optional int32 radius = 2;
inline bool SceneItemAttr::has_radius() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneItemAttr::set_has_radius() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneItemAttr::clear_has_radius() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneItemAttr::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 SceneItemAttr::radius() const {
  // @@protoc_insertion_point(field_get:PublicProto.SceneItemAttr.radius)
  return radius_;
}
inline void SceneItemAttr::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.SceneItemAttr.radius)
}

// optional float x = 3;
inline bool SceneItemAttr::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneItemAttr::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneItemAttr::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneItemAttr::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float SceneItemAttr::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.SceneItemAttr.x)
  return x_;
}
inline void SceneItemAttr::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.SceneItemAttr.x)
}

// optional float y = 4;
inline bool SceneItemAttr::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneItemAttr::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneItemAttr::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneItemAttr::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float SceneItemAttr::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.SceneItemAttr.y)
  return y_;
}
inline void SceneItemAttr::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.SceneItemAttr.y)
}

// -------------------------------------------------------------------

// HighSpeedSceneItemAttr

// required uint32 id = 1;
inline bool HighSpeedSceneItemAttr::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HighSpeedSceneItemAttr::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HighSpeedSceneItemAttr::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HighSpeedSceneItemAttr::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HighSpeedSceneItemAttr::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.HighSpeedSceneItemAttr.id)
  return id_;
}
inline void HighSpeedSceneItemAttr::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.HighSpeedSceneItemAttr.id)
}

// optional int32 radius = 2;
inline bool HighSpeedSceneItemAttr::has_radius() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HighSpeedSceneItemAttr::set_has_radius() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HighSpeedSceneItemAttr::clear_has_radius() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HighSpeedSceneItemAttr::clear_radius() {
  radius_ = 0;
  clear_has_radius();
}
inline ::google::protobuf::int32 HighSpeedSceneItemAttr::radius() const {
  // @@protoc_insertion_point(field_get:PublicProto.HighSpeedSceneItemAttr.radius)
  return radius_;
}
inline void HighSpeedSceneItemAttr::set_radius(::google::protobuf::int32 value) {
  set_has_radius();
  radius_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.HighSpeedSceneItemAttr.radius)
}

// optional float x = 3;
inline bool HighSpeedSceneItemAttr::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HighSpeedSceneItemAttr::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HighSpeedSceneItemAttr::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HighSpeedSceneItemAttr::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float HighSpeedSceneItemAttr::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.HighSpeedSceneItemAttr.x)
  return x_;
}
inline void HighSpeedSceneItemAttr::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.HighSpeedSceneItemAttr.x)
}

// optional float y = 4;
inline bool HighSpeedSceneItemAttr::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HighSpeedSceneItemAttr::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HighSpeedSceneItemAttr::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HighSpeedSceneItemAttr::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float HighSpeedSceneItemAttr::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.HighSpeedSceneItemAttr.y)
  return y_;
}
inline void HighSpeedSceneItemAttr::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.HighSpeedSceneItemAttr.y)
}

// -------------------------------------------------------------------

// DeleteItem

// required uint32 id = 1;
inline bool DeleteItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DeleteItem::id() const {
  // @@protoc_insertion_point(field_get:PublicProto.DeleteItem.id)
  return id_;
}
inline void DeleteItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.DeleteItem.id)
}

// optional uint32 predator_id = 2;
inline bool DeleteItem::has_predator_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteItem::set_has_predator_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteItem::clear_has_predator_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteItem::clear_predator_id() {
  predator_id_ = 0u;
  clear_has_predator_id();
}
inline ::google::protobuf::uint32 DeleteItem::predator_id() const {
  // @@protoc_insertion_point(field_get:PublicProto.DeleteItem.predator_id)
  return predator_id_;
}
inline void DeleteItem::set_predator_id(::google::protobuf::uint32 value) {
  set_has_predator_id();
  predator_id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.DeleteItem.predator_id)
}

// -------------------------------------------------------------------

// S_SyncLogicCenter

// required float x = 1;
inline bool S_SyncLogicCenter::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_SyncLogicCenter::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_SyncLogicCenter::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_SyncLogicCenter::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float S_SyncLogicCenter::x() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncLogicCenter.x)
  return x_;
}
inline void S_SyncLogicCenter::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SyncLogicCenter.x)
}

// required float y = 2;
inline bool S_SyncLogicCenter::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_SyncLogicCenter::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_SyncLogicCenter::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_SyncLogicCenter::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float S_SyncLogicCenter::y() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SyncLogicCenter.y)
  return y_;
}
inline void S_SyncLogicCenter::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SyncLogicCenter.y)
}

// -------------------------------------------------------------------

// S_GameOver

// -------------------------------------------------------------------

// C_Fission

// required float radian = 1;
inline bool C_Fission::has_radian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_Fission::set_has_radian() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_Fission::clear_has_radian() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_Fission::clear_radian() {
  radian_ = 0;
  clear_has_radian();
}
inline float C_Fission::radian() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_Fission.radian)
  return radian_;
}
inline void C_Fission::set_radian(float value) {
  set_has_radian();
  radian_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.C_Fission.radian)
}

// -------------------------------------------------------------------

// C_Expal

// required float radian = 1;
inline bool C_Expal::has_radian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_Expal::set_has_radian() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_Expal::clear_has_radian() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_Expal::clear_radian() {
  radian_ = 0;
  clear_has_radian();
}
inline float C_Expal::radian() const {
  // @@protoc_insertion_point(field_get:PublicProto.C_Expal.radian)
  return radian_;
}
inline void C_Expal::set_radian(float value) {
  set_has_radian();
  radian_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.C_Expal.radian)
}

// -------------------------------------------------------------------

// S_UserLogout

// required uint64 uid = 1;
inline bool S_UserLogout::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_UserLogout::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_UserLogout::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_UserLogout::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 S_UserLogout::uid() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_UserLogout.uid)
  return uid_;
}
inline void S_UserLogout::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_UserLogout.uid)
}

// -------------------------------------------------------------------

// S_SceneItemAttrAfterImpactToCollapsar

// repeated .PublicProto.SceneItemAttr new_pos = 1;
inline int S_SceneItemAttrAfterImpactToCollapsar::new_pos_size() const {
  return new_pos_.size();
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_new_pos() {
  new_pos_.Clear();
}
inline const ::PublicProto::SceneItemAttr& S_SceneItemAttrAfterImpactToCollapsar::new_pos(int index) const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.new_pos)
  return new_pos_.Get(index);
}
inline ::PublicProto::SceneItemAttr* S_SceneItemAttrAfterImpactToCollapsar::mutable_new_pos(int index) {
  // @@protoc_insertion_point(field_mutable:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.new_pos)
  return new_pos_.Mutable(index);
}
inline ::PublicProto::SceneItemAttr* S_SceneItemAttrAfterImpactToCollapsar::add_new_pos() {
  // @@protoc_insertion_point(field_add:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.new_pos)
  return new_pos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PublicProto::SceneItemAttr >&
S_SceneItemAttrAfterImpactToCollapsar::new_pos() const {
  // @@protoc_insertion_point(field_list:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.new_pos)
  return new_pos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PublicProto::SceneItemAttr >*
S_SceneItemAttrAfterImpactToCollapsar::mutable_new_pos() {
  // @@protoc_insertion_point(field_mutable_list:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.new_pos)
  return &new_pos_;
}

// required uint32 collapsar_id = 2;
inline bool S_SceneItemAttrAfterImpactToCollapsar::has_collapsar_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::set_has_collapsar_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_has_collapsar_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_collapsar_id() {
  collapsar_id_ = 0u;
  clear_has_collapsar_id();
}
inline ::google::protobuf::uint32 S_SceneItemAttrAfterImpactToCollapsar::collapsar_id() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.collapsar_id)
  return collapsar_id_;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::set_collapsar_id(::google::protobuf::uint32 value) {
  set_has_collapsar_id();
  collapsar_id_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.collapsar_id)
}

// required uint64 uid = 3;
inline bool S_SceneItemAttrAfterImpactToCollapsar::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 S_SceneItemAttrAfterImpactToCollapsar::uid() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.uid)
  return uid_;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.uid)
}

// required bool erase_collapsar = 4;
inline bool S_SceneItemAttrAfterImpactToCollapsar::has_erase_collapsar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::set_has_erase_collapsar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_has_erase_collapsar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::clear_erase_collapsar() {
  erase_collapsar_ = false;
  clear_has_erase_collapsar();
}
inline bool S_SceneItemAttrAfterImpactToCollapsar::erase_collapsar() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.erase_collapsar)
  return erase_collapsar_;
}
inline void S_SceneItemAttrAfterImpactToCollapsar::set_erase_collapsar(bool value) {
  set_has_erase_collapsar();
  erase_collapsar_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_SceneItemAttrAfterImpactToCollapsar.erase_collapsar)
}

// -------------------------------------------------------------------

// S_UpdatePoint

// required uint32 point = 1;
inline bool S_UpdatePoint::has_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_UpdatePoint::set_has_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_UpdatePoint::clear_has_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_UpdatePoint::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 S_UpdatePoint::point() const {
  // @@protoc_insertion_point(field_get:PublicProto.S_UpdatePoint.point)
  return point_;
}
inline void S_UpdatePoint::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:PublicProto.S_UpdatePoint.point)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PublicProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2eproto__INCLUDED
